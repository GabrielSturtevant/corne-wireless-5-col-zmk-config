/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/modifiers.h>

#define AS(keycode) &as LS(keycode) keycode
#define MO_TO(layer) &mo_to layer layer
#define DVO 0
#define COL 4

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    mo_to: behavior_mo_to {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&to>;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_layer_switch {
            timeout-ms = <50>;
            key-positions = <30 35>;
            layers = <0>;
            bindings = <&to 4>;
        };
        compatible = "zmk,combos";
        combo_alt_tab {
            timeout-ms = <50>;
            key-positions = <20 21 22>;
            bindings = <&kp LA(TAB)>;
        };
        compatible = "zmk,combos";
        combo_alt_tab {
            timeout-ms = <50>;
            key-positions = <16 17>;
            layers = <0>;
            bindings = <&kp LA(BSPC)>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  '  |  ,  |  .  |  P  |  Y  |     |  F  |  G   |  C   |  R   | L |
// |  A  |  O  |  E  |  U  |  I  |     |  D  |  H   |  T   |  N   | S | 
// |  ;  |  Q  |  J  |  K  |  X  |     |  B  |  M   |  W   |  V   | Z |
//             | GUI | LWR | SPC |     | ENT | RSE  | BSPC |
                        display-name = "Base";
                        bindings = <
   &kp SINGLE_QUOTE &kp COMMA &kp PERIOD &kp P &kp Y     &kp F   &kp G  &kp C  &kp R  &kp L
   &kp A &kp O &kp E &kp U &kp I             &kp D   &kp H  &kp T &kp N  &kp S
   &kp SEMICOLON &kp Q &kp J &kp K &kp X         &kp B   &kp M  &kp W  &kp V  &kp Z
        MO_TO(3)  &mt LCTRL SPACE &kp LGUI      &kp ENTER &mt LSHIFT BSPC MO_TO(2)
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// | !     |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |
// | BT1   | BT2 | BT3 | BT4 | BT5 |     | LFT | DWN |  UP | RGT |     |
// | BTCLR |     |     |     |     |     |     |     |     |     |     |
//               | GUI |     | SPC |     | ENT | ESC | TAB |
                        display-name = "Lower";
                        bindings = <
   &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT        &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &kp LEFT  &kp DOWN  &kp UP          &kp RIGHT &trans 
   &bt BT_CLR   &trans       &trans       &trans       &trans           &trans    &trans    &trans          &trans    &trans 
                             &to 0       &kp LGUI     &kp SPACE        &kp ENTER   &kp BSPC   &kp TAB
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | 1! |  2@ |  3# |  4$ |  5% |     |  6^ |  7& |  8* |  9(  |  0)  |
// | -_ |  =+ |  {  |  [  |  (  |     |  )  |  ]  |  }  |  /?  |  \|  |
// | `~ |     |     |  ,< |  :  |     |  ;  |  .> | CTRL| META |      |
//            | GUI | ESC | SPC |     | ENT |     | TAB |
                        display-name = "Raise";
                        bindings = <

   AS(N1)    AS(N2)    AS(N3)    AS(N4)    AS(N5)        AS(N6)    AS(N7)    AS(N8)    AS(N9)   AS(N0)
   AS(MINUS) AS(EQUAL) &kp LBRC  &kp LBKT  &kp LPAR      &kp RPAR  &kp RBKT  &kp RBRC  AS(FSLH) AS(BSLH)
   AS(GRAVE) &trans    &trans    AS(COMMA) &kp COLON     &kp SEMI  AS(DOT)   &kp LCTRL &kp RALT &trans
                       &to 0  &kp SPACE    &kp ESC     &kp ENTER   &kp BSPC   &to 1
                        >;
                };

                mod_layer_1 {
// -----------------------------------------------------------------------------------------
// | !     |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |
// | BT1   | BT2 | BT3 | BT4 | BT5 |     | LFT | DWN |  UP | RGT |     |
// | BTCLR |     |     |     |     |     |     |     |     |     |     |
//               | GUI |     | SPC |     | ENT | ESC | TAB |
                        display-name = "Mod1";
                        bindings = <
   &kp TAB     &none    &mt LBKT LBRC     &mt RBKT RBRC    &to 4    &none       &none       &none    &none        &none
   &kp ESC     &none    &mt LT LPAR       &mt GT RPAR      &kp I    &kp LEFT    &kp DOWN    &kp UP   &kp RIGHT    &none
   &kp LALT    &kp LC(Z)    &mt LC(X) LC(C)        &kp LC(V)      &none    &none    AS(MINUS)    AS(EQUAL)    AS(BSLH)    AS(FSLH)
                    &to 0    &mt LCTRL SPACE    &kp BSPC    &kp ENTER    &kp BSPC    &to 2
                        >;
                };


                colemak_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B  |     |  J  |  L   |  U   |  Y   | ; |
// |  A  |  R  |  S  |  T  |  G  |     |  M  |  N   |  E   |  I   | O | 
// |  X  |  C  |  D  |  V  |  Z  |     |  K  |  H   |  ,   |  .   | ' |
//             | GUI | LWR | SPC |     | ENT | RSE  | BSPC |
                        display-name =  "Colemak";
                        bindings = <
   &kp Q    &kp W    &kp F    &kp P    &kp B        &kp J    &kp L    &kp U    &kp Y    &kp SEMICOLON
   &kp A    &kp R    &kp S    &kp T    &kp G        &kp M    &kp N    &kp E    &kp I    &kp O
   &kp X    &kp C    &kp D    &kp V    &kp Z        &kp K    &kp K    &kp COMMA    &kp PERIOD    &kp SINGLE_QUOTE
        &to 0  &mt LCTRL SPACE &kp LGUI      &kp ENTER &mt LSHIFT BSPC &to 2
                        >;
                };

                mod_layer_2 {
// -----------------------------------------------------------------------------------------
// | !     |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |
// | BT1   | BT2 | BT3 | BT4 | BT5 |     | LFT | DWN |  UP | RGT |     |
// | BTCLR |     |     |     |     |     |     |     |     |     |     |
//               | GUI |     | SPC |     | ENT | ESC | TAB |
                        display-name = "Mod2";
                        bindings = <
   &none    &none    &none    &none    &none    &none    &none    &none    &none    &none
   &none    &none    &none    &none    &none    &none    &none    &none    &none    &none
   &none    &none    &none    &none    &none    &none    &none    &none    &none    &none
                    &tog 0    &none    &none    &none    &none    &none
                        >;
                };

                extra_1 {
                        status = "reserved";
                };

                extra_2 {
                        status = "reserved";
                };

                extra_3 {
                        status = "reserved";
                };
        };
};
